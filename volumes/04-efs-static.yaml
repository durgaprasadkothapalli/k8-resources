# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: expense-efs
# spec:
#   capacity:
#     storage: 5Gi
#   volumeMode: Filesystem
#   accessModes:
#     - ReadWriteOnce
#   storageClassName: ""
#   persistentVolumeReclaimPolicy: Retain
#   csi:
#     driver: efs.csi.aws.com
#     volumeHandle: fs-0a59015fe2a5b5b95
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: expense-efs
# spec:
#   volumeName: expense-efs
#   accessModes:
#     - ReadWriteOnce
#   storageClassName: ""  
#   resources:
#     requests:
#       storage: 5Gi
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: efs-static
#   labels:
#     purpose: efs-static
# spec:
#   # nodeSelector:
#   #   topology.kubernetes.io/zone: us-east-1b
#   containers:
#   - name: nginx
#     image: nginx
#     # command: ["/bin/sh"]
#     # args: ["-c", "while true; do echo $(date -u) >> /data/out.txt; sleep 5; done"]
#     volumeMounts:
#     - name: expense-efs  # must match the name in volumes.
#       mountPath: /usr/share/nginx/html
#   volumes:
#   - name: expense-efs # must match the name in volumeMounts.
#     persistentVolumeClaim:
#       claimName: expense-efs
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx
# spec:
#   type: LoadBalancer
#   selector:
#     purpose: efs-static-volume-creation
#   ports:
#     - name: nginx-svc-ports
#       protocol: TCP
#       port: 80
#       targetPort: 80
#       nodePort: 30007      


# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: expense-efs
# spec:
#   capacity:
#     storage: 5Gi
#   volumeMode: Filesystem
#   accessModes:
#     - ReadWriteOnce
#   storageClassName: ""
#   persistentVolumeReclaimPolicy: Retain
#   csi:
#     driver: efs.csi.aws.com
#     volumeHandle: fs-apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: expense-efs
# spec:
#   capacity:
#     storage: 5Gi
#   volumeMode: fs-0a59015fe2a5b5b95
#   # accessModes:
#   #   - ReadWriteOnce
#   # storageClassName: ""
#   # persistentVolumeReclaimPolicy: Retain
#   # csi:
#   #   driver: efs.csi.aws.com
#   #   volumeHandle: fs-0a59015fe2a5b5b95
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: expense-efs
# spec:
#   volumeName: expense-efs
#   accessModes:
#     - ReadWriteOnce
#   storageClassName: ""
#   resources:
#     requests:
#       storage: 5Gi
      
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: efs-static
#   labels:
#     purpose: efs-static
# spec:
#   containers:
#   - name: nginx
#     image: nginx
#     volumeMounts: # docker run -v hostpath:contaierpath
#     - name: expense-efs
#       mountPath: /usr/share/nginx/html
#   volumes:
#   - name: expense-efs
#     persistentVolumeClaim:
#       claimName: expense-efs
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: nginx
# spec:
#   type: LoadBalancer
#   selector:
#     purpose: efs-static
#   ports:
#   - name: nginx-svc-port
#     protocol: TCP
#     port: 80 # service port
#     targetPort: 80 # container port
#     nodePort: 30007
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: expense-pv
# spec:
#   capacity:
#     storage: 5Gi
#   volumeMode: Filesystem
#   accessModes:
#     - ReadWriteOnce
#   storageClassName: ""
#   persistentVolumeReclaimPolicy: Retain
#   csi:
#     driver: efs.csi.aws.com
#     volumeHandle: fs-033baa00f17984f1d
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: expense-efs
# spec:
#   volumeName: expense-pv
#   accessModes:
#     - ReadWriteOnce
#   storageClassName: ""
#   resources:
#     requests:
#       storage: 5Gi
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: efs-static
#   labels:
#     purpose: efs-static
# spec:
#   containers:
#   - name: nginx
#     image: nginx
#     volumeMounts: # docker run -v hostpath:contaierpath
#     - name: expense-pv
#       mountPath: /usr/share/nginx/html
#   volumes:
#   - name: expense-pv
#     persistentVolumeClaim:
#       claimName: expense-efs
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: nginx
# spec:
#   type: LoadBalancer
#   selector:
#     purpose: efs-static
#   ports:
#   - name: nginx-svc-port
#     protocol: TCP
#     port: 80 # service port
#     targetPort: 80 # container port
#     nodePort: 30007

apiVersion: v1
kind: PersistentVolume
metadata:
  name: expense-efs-static
  labels:
    project: expense
    env: dev
spec:
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 5Gi
  csi:
    driver: efs.csi.aws.com
    volumeHandle: fs-033baa00f17984f1d
  storageClassName: ""
  persistentVolumeReclaimPolicy: Retain
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: expense-efs-static-claim
  labels:
    project: expense
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: ""
  volumeName: expense-efs-static
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: efs-pod
  labels:
    project: expense
    environment: dev
spec:
  containers:
  - name: expense-cont
    image: nginx
    volumeMounts:
    - name: expense-efs-static
      mountPath: /usr/share/nginx/html/
  volumes:
  - name: expense-efs-static
    persistentVolumeClaim:
      claimName: expense-efs-static-claim
---
apiVersion: v1
kind: Service
metadata:
  name: efs-service
  labels:
    project: expense
    environment: dev
spec:
  type: LoadBalancer
  selector:
    project: expense
    environment: dev
  ports:
  - name: nginx-service-port
    protocol: TCP
    port: 80
    targetPort: 80